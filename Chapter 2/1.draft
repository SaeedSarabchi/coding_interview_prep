with temporary buffer:
time complexity: o(n)
space complexity: o(c), c is the number of available characters.

 def remove_duplicates(input_linkedlist):
    reference = input_linkedlist
    XXX the name should be pointer, not reference!!XXX
    seen_values = set()
    while reference != None:
        if (reference.data.key, reference.data.value) in seen_values:
            if reference.prev != None:
                reference.prev.next = reference.next
            else:
                input_linkedlist._head = reference.next
            if reference.next != None:
                reference.next.prev = reference.prev
        else:
            seen_values.add((reference.data.key, reference.data.value))
        reference = reference.next

init_list = [(3, "val3"), (2, "val2"), (2, "val2"), (3, "val3")]
ll = LinkedList.from_list(init_list)
> remove_duplicate(ll)


without temporary buffer:
2 references, time complexity: O(N^2)
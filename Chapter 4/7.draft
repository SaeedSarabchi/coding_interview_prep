def topological_sort(graph):
    visited = set()
    #time = 0
    sorted_graph = []
    for node in graph.nodes:
        if node not in visited:
            dfs(node, visited, sorted_graph)
        else:
            if node is not in sorted_graph:
                raise Exception("Error, there is a loop")
    return sorted_graph


def dfs(node, visited, sorted_graph):
    #time = time + 1
    #node.start = time
    visited.add(node)
    for child in node.children:
        if child not in visited:
            #traverse the child
            dfs(child, visited, sorted_graph)
        else:
            if child is not in sorted_graph:
                raise Exception("Error, there is a loop")
    #time = time + 1
    #node.finish = time
    sorted_graph.insert(0, node)


